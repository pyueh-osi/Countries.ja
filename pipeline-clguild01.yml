# DevOps pipeline for CLGuild01 deployment

parameters:
- name: branchName
  displayName: 'Branch to build/deploy'
  type: string
  default: 'master'
- name: branchName2
  displayName: 'Branch to build/deploy 2'
  type: string
  default: 'master'

jobs:
  - job: Publish
    pool:
      # name: 00-OSIManaged-Containers
      # demands: AgentType -equals osimanagedagent
      vmImage: 'vs2017-win2016'

    steps:
      - script: |
          echo "Executing pipeline-clguild01"
          echo "env:Build_SourcesDirectory = %Build_SourcesDirectory%"
          echo "env:Build_SourceBranchName = %Build_SourceBranchName%"
          echo "branchName = ${{parameters.branchName}}"
          echo "branchName2 = ${{parameters.branchName2}}"
          echo "gitRepoName = $(gitRepoName)"

          git clone -b ${{parameters.branchName}} https://user:$(gitToken)@github.com/$(gitOwner)/$(gitRepoName).git --recurse-submodules


      - powershell: |
            Write-Output "Executing pipeline-clguild01"
            Write-Output "env:Build_SourcesDirectory = $env:Build_SourcesDirectory"
            Write-Output "env:Build_SourceBranchName = $env:Build_SourceBranchName"
            Write-Output "branchName = ${{parameters.branchName}}"
            Write-Output "branchName2 = ${{parameters.branchName2}}"
            Write-Output "gitRepoName = ${{variables.gitRepoName}}"
            Write-Output "gitRepoName = ${{gitRepoName}}"
            Write-Output "gitRepoName = $(gitRepoName}"
            Write-Output "gitRepoName = $env:gitRepoName"
            Write-Output "gitToken = ${{variables.gitToken}}"

            git clone -b ${{parameters.branchName}} https://user:${{variables.gitToken}}@github.com/${{variables.gitOwner}}/${{variables.gitRepoName}}.git --recurse-submodules
            cd ${{variables.gitRepoName}}
            cd docfx_project

            docfx.exe build .\docfx.json

            docfx.exe pdf .\docfx.json
            copy .\_site_pdf\*.pdf .\_site

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$env:Build_SourcesDirectory\$(gitRepoName)\docfx_project\_site'
          ArtifactName: 'drop'
          publishLocation: 'Container'


##          set-variable -name "src_dir" -value "$env:Build_SourcesDirectory\$gitRepoName"
##          set-variable -name "build_info_file" -value "$src_dir\docfx_project\_site\BuildInfo.txt"
##          new-item -path $build_info_file -itemtype file
##          
##          add-content -path $build_info_file -value "Build Time      : $build_timestamp"
##          add-content -path $build_info_file -value "Source Repo     : $env:Build_Repository_Uri"
##          add-content -path $build_info_file -value "Branch          : $env:Build_SourceBranchName"
##          add-content -path $build_info_file -value "Last Commit     : $env:Build_SourceVersion"
##          add-content -path $build_info_file -value ""
##          add-content -path $build_info_file -value "Other Build Info:"
##          add-content -path $build_info_file -value "- Agent         : $env:Agent_MachineName"
##          add-content -path $build_info_file -value "- Name          : $env:Build_DefinitionName"
##          add-content -path $build_info_file -value "- Number        : $env:Build_BuildNumber"
##          add-content -path $build_info_file -value "- Reason        : $env:Build_Reason"
##          add-content -path $build_info_file -value "- Requested For : $env:Build_RequestedFor"
##          add-content -path $build_info_file -value "- Queued By     : $env:Build_QueuedBy"
##
        displayName: 'Write BuildInfo.txt file'



