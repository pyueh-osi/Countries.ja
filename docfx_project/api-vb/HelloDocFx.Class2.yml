### YamlMime:ManagedReference
items:
- uid: HelloDocFx.Class2
  commentId: T:HelloDocFx.Class2
  id: Class2
  parent: HelloDocFx
  children:
  - HelloDocFx.Class2.#ctor(System.Int32)
  - HelloDocFx.Class2.ConvertToDouble
  - HelloDocFx.Class2.SetInnerClass(System.String,HelloDocFx.Class2.InnerClass)
  - HelloDocFx.Class2.Value
  langs:
  - csharp
  - vb
  name: Class2
  nameWithType: Class2
  fullName: HelloDocFx.Class2
  type: Class
  source:
    id: Class2
    path: ''
    startLine: 5
  assemblies:
  - cs.temp.dll
  namespace: HelloDocFx
  summary: "\nHello this is **Class2** from *HelloDocfx*\n"
  example: []
  syntax:
    content: public class Class2
    content.vb: Public Class Class2
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: HelloDocFx.Class2.Value
  commentId: P:HelloDocFx.Class2.Value
  id: Value
  parent: HelloDocFx.Class2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Class2.Value
  fullName: HelloDocFx.Class2.Value
  type: Property
  source:
    id: Value
    path: ''
    startLine: 8
  assemblies:
  - cs.temp.dll
  namespace: HelloDocFx
  syntax:
    content: public int Value { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Value As Integer
  overload: HelloDocFx.Class2.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: HelloDocFx.Class2.#ctor(System.Int32)
  commentId: M:HelloDocFx.Class2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: HelloDocFx.Class2
  langs:
  - csharp
  - vb
  name: Class2(Int32)
  nameWithType: Class2.Class2(Int32)
  fullName: HelloDocFx.Class2.Class2(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 14
  assemblies:
  - cs.temp.dll
  namespace: HelloDocFx
  summary: "\nThis is a ctor\n"
  example: []
  syntax:
    content: public Class2(int value)
    parameters:
    - id: value
      type: System.Int32
      description: The value of the class
    content.vb: Public Sub New(value As Integer)
  overload: HelloDocFx.Class2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HelloDocFx.Class2.ConvertToDouble
  commentId: M:HelloDocFx.Class2.ConvertToDouble
  id: ConvertToDouble
  parent: HelloDocFx.Class2
  langs:
  - csharp
  - vb
  name: ConvertToDouble()
  nameWithType: Class2.ConvertToDouble()
  fullName: HelloDocFx.Class2.ConvertToDouble()
  type: Method
  source:
    id: ConvertToDouble
    path: ''
    startLine: 19
  assemblies:
  - cs.temp.dll
  namespace: HelloDocFx
  syntax:
    content: public double ConvertToDouble()
    return:
      type: System.Double
    content.vb: Public Function ConvertToDouble As Double
  overload: HelloDocFx.Class2.ConvertToDouble*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HelloDocFx.Class2.SetInnerClass(System.String,HelloDocFx.Class2.InnerClass)
  commentId: M:HelloDocFx.Class2.SetInnerClass(System.String,HelloDocFx.Class2.InnerClass)
  id: SetInnerClass(System.String,HelloDocFx.Class2.InnerClass)
  parent: HelloDocFx.Class2
  langs:
  - csharp
  - vb
  name: SetInnerClass(String, Class2.InnerClass)
  nameWithType: Class2.SetInnerClass(String, Class2.InnerClass)
  fullName: HelloDocFx.Class2.SetInnerClass(System.String, HelloDocFx.Class2.InnerClass)
  type: Method
  source:
    id: SetInnerClass
    path: ''
    startLine: 29
  assemblies:
  - cs.temp.dll
  namespace: HelloDocFx
  summary: "\nA method referencing a inner class\n"
  example: []
  syntax:
    content: public void SetInnerClass(string name, Class2.InnerClass inner)
    parameters:
    - id: name
      type: System.String
      description: The name
    - id: inner
      type: HelloDocFx.Class2.InnerClass
      description: A inner class with type <xref href="HelloDocFx.Class2.InnerClass" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub SetInnerClass(name As String, inner As Class2.InnerClass)
  overload: HelloDocFx.Class2.SetInnerClass*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: HelloDocFx
  commentId: N:HelloDocFx
  name: HelloDocFx
  nameWithType: HelloDocFx
  fullName: HelloDocFx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HelloDocFx.Class2.Value*
  commentId: Overload:HelloDocFx.Class2.Value
  name: Value
  nameWithType: Class2.Value
  fullName: HelloDocFx.Class2.Value
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: HelloDocFx.Class2.#ctor*
  commentId: Overload:HelloDocFx.Class2.#ctor
  name: Class2
  nameWithType: Class2.Class2
  fullName: HelloDocFx.Class2.Class2
- uid: HelloDocFx.Class2.ConvertToDouble*
  commentId: Overload:HelloDocFx.Class2.ConvertToDouble
  name: ConvertToDouble
  nameWithType: Class2.ConvertToDouble
  fullName: HelloDocFx.Class2.ConvertToDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: HelloDocFx.Class2.InnerClass
  commentId: T:HelloDocFx.Class2.InnerClass
  parent: HelloDocFx
  name: Class2.InnerClass
  nameWithType: Class2.InnerClass
  fullName: HelloDocFx.Class2.InnerClass
- uid: HelloDocFx.Class2.SetInnerClass*
  commentId: Overload:HelloDocFx.Class2.SetInnerClass
  name: SetInnerClass
  nameWithType: Class2.SetInnerClass
  fullName: HelloDocFx.Class2.SetInnerClass
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
